%!PS-Adobe-2.0 EPSF-2.0
%%Title: advertisers.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Mon Apr 12 10:35:15 2021
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -90 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (advertisers.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 12 10:35:15 2021)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 270 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.72 0.72 0.72 C
1485 864 M
5228 0 V
stroke
LTb
LCb setrgbcolor
1485 864 M
63 0 V
5165 0 R
-63 0 V
stroke
1404 864 M
[ [(Helvetica) 270.0 0.0 true true 0 ( 1)]
] -90.0 MRshow
/Helvetica findfont 270 scalefont setfont
/vshift -90 def
1.000 UL
LTb
LCb setrgbcolor
1485 1256 M
31 0 V
5197 0 R
-31 0 V
1485 1485 M
31 0 V
5197 0 R
-31 0 V
1485 1648 M
31 0 V
5197 0 R
-31 0 V
1485 1774 M
31 0 V
5197 0 R
-31 0 V
1485 1877 M
31 0 V
5197 0 R
-31 0 V
-5197 87 R
31 0 V
5197 0 R
-31 0 V
-5197 76 R
31 0 V
5197 0 R
-31 0 V
-5197 66 R
31 0 V
5197 0 R
-31 0 V
stroke
LTa
0.72 0.72 0.72 C
1485 2166 M
5228 0 V
stroke
LTb
LCb setrgbcolor
1485 2166 M
63 0 V
5165 0 R
-63 0 V
stroke
1404 2166 M
[ [(Helvetica) 270.0 0.0 true true 0 ( 10)]
] -90.0 MRshow
/Helvetica findfont 270 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1485 2558 M
31 0 V
5197 0 R
-31 0 V
1485 2787 M
31 0 V
5197 0 R
-31 0 V
1485 2949 M
31 0 V
5197 0 R
-31 0 V
1485 3075 M
31 0 V
5197 0 R
-31 0 V
1485 3179 M
31 0 V
5197 0 R
-31 0 V
-5197 87 R
31 0 V
5197 0 R
-31 0 V
-5197 75 R
31 0 V
5197 0 R
-31 0 V
-5197 67 R
31 0 V
5197 0 R
-31 0 V
stroke
LTa
0.72 0.72 0.72 C
1485 3467 M
5228 0 V
stroke
LTb
LCb setrgbcolor
1485 3467 M
63 0 V
5165 0 R
-63 0 V
stroke
1404 3467 M
[ [(Helvetica) 270.0 0.0 true true 0 ( 100)]
] -90.0 MRshow
/Helvetica findfont 270 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1485 3859 M
31 0 V
5197 0 R
-31 0 V
1485 4088 M
31 0 V
5197 0 R
-31 0 V
1485 4251 M
31 0 V
5197 0 R
-31 0 V
1485 4377 M
31 0 V
5197 0 R
-31 0 V
1485 4480 M
31 0 V
5197 0 R
-31 0 V
-5197 87 R
31 0 V
5197 0 R
-31 0 V
-5197 76 R
31 0 V
5197 0 R
-31 0 V
-5197 66 R
31 0 V
5197 0 R
-31 0 V
stroke
LTa
0.72 0.72 0.72 C
1485 4769 M
5228 0 V
stroke
LTb
LCb setrgbcolor
1485 4769 M
63 0 V
5165 0 R
-63 0 V
stroke
1404 4769 M
[ [(Helvetica) 270.0 0.0 true true 0 ( 1000)]
] -90.0 MRshow
/Helvetica findfont 270 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1485 864 M
0 63 V
0 3842 R
0 -63 V
stroke
1485 594 M
[ [(Helvetica) 270.0 0.0 true true 0 ( 1)]
] -90.0 MCshow
/Helvetica findfont 270 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2010 864 M
0 31 V
0 3874 R
0 -31 V
2316 864 M
0 31 V
0 3874 R
0 -31 V
2534 864 M
0 31 V
0 3874 R
0 -31 V
2703 864 M
0 31 V
0 3874 R
0 -31 V
2841 864 M
0 31 V
0 3874 R
0 -31 V
2958 864 M
0 31 V
0 3874 R
0 -31 V
3059 864 M
0 31 V
0 3874 R
0 -31 V
3148 864 M
0 31 V
0 3874 R
0 -31 V
3228 864 M
0 63 V
0 3842 R
0 -63 V
stroke
3228 594 M
[ [(Helvetica) 270.0 0.0 true true 0 ( 10)]
] -90.0 MCshow
/Helvetica findfont 270 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3752 864 M
0 31 V
0 3874 R
0 -31 V
4059 864 M
0 31 V
0 3874 R
0 -31 V
4277 864 M
0 31 V
0 3874 R
0 -31 V
4446 864 M
0 31 V
0 3874 R
0 -31 V
4584 864 M
0 31 V
0 3874 R
0 -31 V
4700 864 M
0 31 V
0 3874 R
0 -31 V
4801 864 M
0 31 V
0 3874 R
0 -31 V
4891 864 M
0 31 V
0 3874 R
0 -31 V
4970 864 M
0 63 V
0 3842 R
0 -63 V
stroke
4970 594 M
[ [(Helvetica) 270.0 0.0 true true 0 ( 100)]
] -90.0 MCshow
/Helvetica findfont 270 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5495 864 M
0 31 V
0 3874 R
0 -31 V
5802 864 M
0 31 V
0 3874 R
0 -31 V
6020 864 M
0 31 V
0 3874 R
0 -31 V
6188 864 M
0 31 V
0 3874 R
0 -31 V
6326 864 M
0 31 V
0 3874 R
0 -31 V
6443 864 M
0 31 V
0 3874 R
0 -31 V
6544 864 M
0 31 V
0 3874 R
0 -31 V
6633 864 M
0 31 V
0 3874 R
0 -31 V
6713 864 M
0 63 V
0 3842 R
0 -63 V
stroke
6713 594 M
[ [(Helvetica) 270.0 0.0 true true 0 ( 1000)]
] -90.0 MCshow
/Helvetica findfont 270 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1485 4769 N
0 -3905 V
5228 0 V
0 3905 V
-5228 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
580 2816 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 270.0 0.0 true true 0 (Number of sites)]
] -90.0 MCshow
grestore
/Helvetica findfont 270 scalefont setfont
LTb
LCb setrgbcolor
4099 189 M
[ [(Helvetica) 270.0 0.0 true true 0 (Number of Push Aadvertisers)]
] -90.0 MCshow
/Helvetica findfont 270 scalefont setfont
LTb
% Begin plot #1
1.000 UP
3.000 UL
LTb
1.00 0.00 0.00 C
1485 3611 Crs
2010 3593 Crs
2316 3580 Crs
2534 3450 Crs
2703 3382 Crs
2841 3369 Crs
2958 3320 Crs
3059 3206 Crs
3148 3197 Crs
3228 3150 Crs
3300 3129 Crs
3366 3041 Crs
3426 3028 Crs
3482 3016 Crs
3535 3016 Crs
3583 3003 Crs
3629 3003 Crs
3673 2963 Crs
3713 2949 Crs
3752 2920 Crs
3789 2874 Crs
3824 2841 Crs
3858 2823 Crs
3890 2748 Crs
3921 2727 Crs
3951 2727 Crs
3979 2706 Crs
4007 2684 Crs
4033 2684 Crs
4059 2684 Crs
4084 2684 Crs
4108 2637 Crs
4131 2637 Crs
4154 2637 Crs
4176 2611 Crs
4197 2611 Crs
4218 2611 Crs
4238 2585 Crs
4258 2585 Crs
4277 2529 Crs
4296 2529 Crs
4314 2529 Crs
4332 2498 Crs
4349 2498 Crs
4366 2466 Crs
4383 2466 Crs
4399 2466 Crs
4415 2431 Crs
4430 2431 Crs
4446 2395 Crs
4461 2356 Crs
4475 2356 Crs
4490 2356 Crs
4504 2356 Crs
4518 2356 Crs
4532 2314 Crs
4545 2269 Crs
4558 2269 Crs
4571 2269 Crs
4584 2220 Crs
4596 2220 Crs
4609 2220 Crs
4621 2220 Crs
4633 2220 Crs
4644 2220 Crs
4656 2220 Crs
4667 2166 Crs
4678 2106 Crs
4690 2106 Crs
4700 2106 Crs
4711 2106 Crs
4722 2040 Crs
4732 2040 Crs
4742 2040 Crs
4753 2040 Crs
4763 1964 Crs
4773 1964 Crs
4782 1964 Crs
4792 1964 Crs
4801 1964 Crs
4811 1964 Crs
4820 1964 Crs
4829 1964 Crs
4838 1964 Crs
4847 1964 Crs
4856 1964 Crs
4865 1964 Crs
4874 1877 Crs
4882 1877 Crs
4891 1877 Crs
4899 1877 Crs
4907 1877 Crs
4915 1877 Crs
4924 1877 Crs
4932 1877 Crs
4939 1877 Crs
4947 1877 Crs
4955 1877 Crs
4963 1877 Crs
4970 1877 Crs
4978 1877 Crs
4985 1774 Crs
4993 1774 Crs
5000 1774 Crs
5007 1774 Crs
5014 1774 Crs
5022 1774 Crs
5029 1774 Crs
5036 1774 Crs
5042 1774 Crs
5049 1774 Crs
5056 1774 Crs
5063 1774 Crs
5069 1774 Crs
5076 1774 Crs
5083 1774 Crs
5089 1774 Crs
5096 1774 Crs
5102 1774 Crs
5108 1648 Crs
5115 1648 Crs
5121 1648 Crs
5127 1648 Crs
5133 1648 Crs
5139 1648 Crs
5145 1648 Crs
5151 1648 Crs
5157 1648 Crs
5163 1648 Crs
5169 1648 Crs
5175 1648 Crs
5180 1648 Crs
5186 1648 Crs
5192 1485 Crs
5197 1485 Crs
5203 1485 Crs
5209 1485 Crs
5214 1485 Crs
5220 1485 Crs
5225 1485 Crs
5230 1485 Crs
5236 1485 Crs
5241 1485 Crs
5246 1485 Crs
5252 1485 Crs
5257 1485 Crs
5262 1485 Crs
5267 1485 Crs
5272 1485 Crs
5277 1485 Crs
5282 1485 Crs
5287 1485 Crs
5292 1485 Crs
5297 1485 Crs
5302 1485 Crs
5307 1485 Crs
5312 1485 Crs
5317 1485 Crs
5321 1256 Crs
5326 1256 Crs
5331 1256 Crs
5335 1256 Crs
5340 1256 Crs
5345 1256 Crs
5349 1256 Crs
5354 1256 Crs
5358 1256 Crs
5363 1256 Crs
5367 1256 Crs
5372 1256 Crs
5376 1256 Crs
5381 1256 Crs
5385 1256 Crs
5390 1256 Crs
5394 1256 Crs
5398 1256 Crs
5402 1256 Crs
5407 1256 Crs
5411 1256 Crs
5415 1256 Crs
5419 1256 Crs
5424 1256 Crs
5428 1256 Crs
5432 1256 Crs
5436 1256 Crs
5440 1256 Crs
5444 1256 Crs
5448 1256 Crs
5452 1256 Crs
5456 1256 Crs
5460 1256 Crs
5464 1256 Crs
5468 1256 Crs
5472 1256 Crs
5476 1256 Crs
5480 1256 Crs
5483 1256 Crs
5487 1256 Crs
5491 1256 Crs
5495 1256 Crs
5499 1256 Crs
5502 1256 Crs
5506 1256 Crs
5510 1256 Crs
5514 1256 Crs
5517 1256 Crs
5521 1256 Crs
5525 1256 Crs
5528 1256 Crs
5532 1256 Crs
5535 1256 Crs
5539 1256 Crs
5543 1256 Crs
5546 1256 Crs
5550 864 Crs
5553 864 Crs
5557 864 Crs
5560 864 Crs
5564 864 Crs
5567 864 Crs
5570 864 Crs
5574 864 Crs
5577 864 Crs
5581 864 Crs
5584 864 Crs
5587 864 Crs
5591 864 Crs
5594 864 Crs
5597 864 Crs
5601 864 Crs
5604 864 Crs
5607 864 Crs
5611 864 Crs
5614 864 Crs
5617 864 Crs
5620 864 Crs
5623 864 Crs
5627 864 Crs
5630 864 Crs
5633 864 Crs
5636 864 Crs
5639 864 Crs
5642 864 Crs
5645 864 Crs
5649 864 Crs
5652 864 Crs
5655 864 Crs
5658 864 Crs
5661 864 Crs
5664 864 Crs
5667 864 Crs
5670 864 Crs
5673 864 Crs
5676 864 Crs
5679 864 Crs
5682 864 Crs
5685 864 Crs
5688 864 Crs
5691 864 Crs
5693 864 Crs
5696 864 Crs
5699 864 Crs
5702 864 Crs
5705 864 Crs
5708 864 Crs
5711 864 Crs
5714 864 Crs
5716 864 Crs
5719 864 Crs
5722 864 Crs
5725 864 Crs
5728 864 Crs
5730 864 Crs
5733 864 Crs
5736 864 Crs
5739 864 Crs
5741 864 Crs
5744 864 Crs
5747 864 Crs
5750 864 Crs
5752 864 Crs
5755 864 Crs
5758 864 Crs
5760 864 Crs
5763 864 Crs
5766 864 Crs
5768 864 Crs
5771 864 Crs
5774 864 Crs
5776 864 Crs
5779 864 Crs
5781 864 Crs
5784 864 Crs
5787 864 Crs
5789 864 Crs
5792 864 Crs
5794 864 Crs
5797 864 Crs
5799 864 Crs
5802 864 Crs
5804 864 Crs
5807 864 Crs
5809 864 Crs
5812 864 Crs
5814 864 Crs
5817 864 Crs
5819 864 Crs
5822 864 Crs
5824 864 Crs
5827 864 Crs
5829 864 Crs
5831 864 Crs
5834 864 Crs
5836 864 Crs
5839 864 Crs
5841 864 Crs
5844 864 Crs
5846 864 Crs
5848 864 Crs
5851 864 Crs
5853 864 Crs
5855 864 Crs
5858 864 Crs
5860 864 Crs
5862 864 Crs
5865 864 Crs
5867 864 Crs
5869 864 Crs
5872 864 Crs
5874 864 Crs
5876 864 Crs
5879 864 Crs
5881 864 Crs
5883 864 Crs
5885 864 Crs
5888 864 Crs
5890 864 Crs
5892 864 Crs
5894 864 Crs
5897 864 Crs
5899 864 Crs
5901 864 Crs
5903 864 Crs
5905 864 Crs
5908 864 Crs
5910 864 Crs
5912 864 Crs
5914 864 Crs
5916 864 Crs
5918 864 Crs
5921 864 Crs
5923 864 Crs
5925 864 Crs
5927 864 Crs
5929 864 Crs
5931 864 Crs
5933 864 Crs
5936 864 Crs
5938 864 Crs
5940 864 Crs
5942 864 Crs
5944 864 Crs
5946 864 Crs
5948 864 Crs
5950 864 Crs
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1485 4769 N
0 -3905 V
5228 0 V
0 3905 V
-5228 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
